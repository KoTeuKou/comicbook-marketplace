plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.somegroup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc:2.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.5.5'
//	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.5.5'
	implementation 'org.flywaydb:flyway-core:8.0.0'
	implementation 'org.springframework:spring-jdbc:5.3.10'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.5.5'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.7.4'
	runtimeOnly 'io.r2dbc:r2dbc-postgresql:0.8.10.RELEASE'
	runtimeOnly 'org.postgresql:postgresql:42.2.24.jre7'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'
	testImplementation 'io.projectreactor:reactor-test:3.4.10'
	testImplementation 'org.springframework.security:spring-security-test:5.5.1'
	testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.32'

	implementation 'io.swagger.core.v3:swagger-annotations:2.0.0'
	implementation 'io.gsonfire:gson-fire:1.8.3'
}

ext {
	buildNum = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER") : 0
}

test {
	useJUnitPlatform()
}

task copyFile(type: Copy) {
	from layout.buildDirectory.dir("libs/marketplace-0.0.1-SNAPSHOT.jar")
	into layout.projectDirectory.dir("services/app")
}

task clearOldBuilds(type: Delete) {
	delete "${buildDir}/libs"
}

task generateEntities(type: Exec) {
	commandLine "java", "-jar", "swagger-codegen-cli.jar", "generate", "-iswagger-entities.json", "-ljava", "-cswagger-generate-config.json"
	inputs.file "swagger-entities.json"
	outputs.dir("${projectDir}/src/main/java/com/somegroup/marketplace/swagger/entities")
}
compileJava.dependsOn(clearOldBuilds)
compileJava.dependsOn(generateEntities)

jar {
	if (buildNum != 0) {
		version = version + '.' + buildNum
	}
	archiveFileName = "marketpace-webapp-${version}.jar"
}

